name: Build and Cache Artifacts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Cache root node_modules
      - name: Cache root dependencies
        uses: actions/cache@v3
        id: root-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-root-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-root-

      # Cache server node_modules
      - name: Cache server dependencies
        uses: actions/cache@v3
        id: server-cache
        with:
          path: server/node_modules
          key: ${{ runner.os }}-server-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-server-

      # Install dependencies if cache miss
      - name: Install root dependencies
        if: steps.root-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Install server dependencies
        if: steps.server-cache.outputs.cache-hit != 'true'
        working-directory: server
        run: npm ci

      # Build frontend
      - name: Build frontend
        run: npm run build

      # Cache build output
      - name: Cache build output
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ github.sha }}

      # Run tests
      - name: Run tests
        run: npm test

      # Store test results
      - name: Store test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            coverage/
            test-results/

  docker-build:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build and cache Docker image
      - name: Build and cache Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: zscaler:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Move cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Test Docker image
      - name: Test Docker image
        run: |
          docker-compose up -d
          docker-compose run --rm server npm test
          docker-compose down

      # Store Docker image as artifact
      - name: Save Docker image
        run: docker save zscaler:latest | gzip > zscaler-image.tar.gz

      - name: Store Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: zscaler-image.tar.gz

